/****************************************************************************/
/***                                                                      ***/
/***   header file generated by ASC 1.63 - altona shader compiler.        ***/
/***                                                                      ***/
/****************************************************************************/

#ifndef HEADER_WZ4FRLIB_WZ4_MTRL_SHADER_ASC
#define HEADER_WZ4FRLIB_WZ4_MTRL_SHADER_ASC

#include "base/graphics.hpp"

/****************************************************************************/

enum Wz4ShaderVSPerm
{
  Wz4ShaderVSPerm_DetailUV0                 = 0x0000,
  Wz4ShaderVSPerm_DetailUV1                 = 0x0001,
  Wz4ShaderVSPerm_DetailPos                 = 0x0002,
  Wz4ShaderVSPerm_DetailNorm                = 0x0003,
  Wz4ShaderVSPerm_DetailRefl                = 0x0004,
  Wz4ShaderVSPermMask_DetailTex             = 0x0007,
  Wz4ShaderVSPermMask_SkinEnable            = 0x0008,
  Wz4ShaderVSPermMask_NeedTangent           = 0x0010,
  Wz4ShaderVSPerm_ShadowOff                 = 0x0000,
  Wz4ShaderVSPerm_ShadowReceive             = 0x0020,
  Wz4ShaderVSPerm_ShadowReceivePS3          = 0x0040,
  Wz4ShaderVSPermMask_Shadow                = 0x0060,
};
enum Wz4ShaderPSPerm
{
  Wz4ShaderPSPermMask_TexBump               = 0x0001,
  Wz4ShaderPSPermMask_TexSpecularCube       = 0x0002,
  Wz4ShaderPSPerm_TexDetailOff              = 0x0000,
  Wz4ShaderPSPerm_TexDetailMul              = 0x0004,
  Wz4ShaderPSPerm_TexDetailAdd              = 0x0008,
  Wz4ShaderPSPerm_TexDetailBump             = 0x000c,
  Wz4ShaderPSPerm_TexDetailSpecMul          = 0x0010,
  Wz4ShaderPSPermMask_TexDetail             = 0x001c,
  Wz4ShaderPSPermMask_TexDiffuseCube        = 0x0020,
  Wz4ShaderPSPerm_AlphaOne                  = 0x0000,
  Wz4ShaderPSPerm_AlphaDist                 = 0x0040,
  Wz4ShaderPSPerm_AlphaDiffuse              = 0x0080,
  Wz4ShaderPSPermMask_Alpha                 = 0x00c0,
  Wz4ShaderPSPerm_ShadowOff                 = 0x0000,
  Wz4ShaderPSPerm_ShadowReceive             = 0x0100,
  Wz4ShaderPSPerm_ShadowReceivePS3          = 0x0200,
  Wz4ShaderPSPermMask_Shadow                = 0x0300,
};
enum Wz4LShaderVSPerm
{
  Wz4LShaderVSPerm_DetailUV0                = 0x0000,
  Wz4LShaderVSPerm_DetailUV1                = 0x0001,
  Wz4LShaderVSPerm_DetailPos                = 0x0002,
  Wz4LShaderVSPerm_DetailNorm               = 0x0003,
  Wz4LShaderVSPerm_DetailRefl               = 0x0004,
  Wz4LShaderVSPermMask_DetailTex            = 0x0007,
  Wz4LShaderVSPermMask_SkinEnable           = 0x0008,
};
enum Wz4LShaderPSPerm
{
  Wz4LShaderPSPerm_TexDetailOff             = 0x0000,
  Wz4LShaderPSPerm_TexDetailMul             = 0x0001,
  Wz4LShaderPSPerm_TexDetailAdd             = 0x0002,
  Wz4LShaderPSPermMask_TexDetail            = 0x0003,
  Wz4LShaderPSPermMask_AlphaDiffuse         = 0x0004,
};
enum Wz4CShaderVSPerm
{
  Wz4CShaderVSPermMask_SkinEnable           = 0x0001,
  Wz4CShaderVSPermMask_ShadowPS3            = 0x0002,
};
enum Wz4CShaderPSPerm
{
  Wz4CShaderPSPermMask_ShadowPS3            = 0x0001,
};

/****************************************************************************/

struct Wz4ShaderCamera
{
public:
  sMatrix44 MVP;
  sVector4 LightPos;
  sVector4 EyePos;
  sMatrix44 ShadowMatrix;
  static const sInt RegStart = 0;
  static const sInt RegCount = 10;
  static const sInt Slot = sCBUFFER_VS|0;
#line 16 "wz4_mtrl_shader.asc"
  void Init(const sViewport *vp);
#line 92 "wz4_mtrl_shader.hpp"
};

struct Wz4ShaderUV
{
public:
  sVector4 UV[6];
  sVector4 pad[2];
  static const sInt RegStart = 12;
  static const sInt RegCount = 8;
  static const sInt Slot = sCBUFFER_VS|1;
#line 33 "wz4_mtrl_shader.asc"
  void Init();
#line 105 "wz4_mtrl_shader.hpp"
};


/****************************************************************************/

class Wz4XShader : public sMaterial
{
  static sShader *VS(sInt);
  static sShader *PS(sInt);
public:
  void SelectShaders(sVertexFormatHandle *);
#line 305 "wz4_mtrl_shader.asc"

    static sShader *GetVS(sInt i) { return VS(i); }
    static sShader *GetPS(sInt i) { return PS(i); }
  
#line 122 "wz4_mtrl_shader.cpp"
};
class Wz4LShader : public sMaterial
{
  static sShader *VS(sInt);
  static sShader *PS(sInt);
public:
  void SelectShaders(sVertexFormatHandle *);
#line 449 "wz4_mtrl_shader.asc"

    static sShader *GetVS(sInt i) { return VS(i); }
    static sShader *GetPS(sInt i) { return PS(i); }
  
#line 135 "wz4_mtrl_shader.cpp"
};
class Wz4CShader : public sMaterial
{
  static sShader *VS(sInt);
  static sShader *PS(sInt);
public:
  void SelectShaders(sVertexFormatHandle *);
#line 544 "wz4_mtrl_shader.asc"

    static sShader *GetVS(sInt i) { return VS(i); }
    static sShader *GetPS(sInt i) { return PS(i); }
  
#line 148 "wz4_mtrl_shader.cpp"
};

/****************************************************************************/

#endif

