/****************************************************************************/
/***                                                                      ***/
/***   header file generated by ASC 1.63 - altona shader compiler.        ***/
/***                                                                      ***/
/****************************************************************************/

#ifndef HEADER_WZ4FRLIB_ADF_SHADER_ASC
#define HEADER_WZ4FRLIB_ADF_SHADER_ASC

#include "base/graphics.hpp"

/****************************************************************************/


/****************************************************************************/

struct tADFMatVSPara
{
public:
  sMatrix44 mvp;
  static const sInt RegStart = 0;
  static const sInt RegCount = 4;
  static const sInt Slot = sCBUFFER_VS|0;
#line 25 "adf_shader.hpp"
};

struct tADFMatPSPara
{
public:
  sVector4 dnx;
  sVector4 dny;
  sVector4 px;
  sVector4 cp;
  sVector4 sp;
  sVector4 op;
  sVector4 mp;
  sVector4 id;
  sVector4 d;
  sVector4 pstep;
  static const sInt RegStart = 0;
  static const sInt RegCount = 10;
  static const sInt Slot = sCBUFFER_PS|0;
#line 44 "adf_shader.hpp"
};

struct tADFShadowMatVSPara
{
public:
  sMatrix44 mvp;
  static const sInt RegStart = 0;
  static const sInt RegCount = 4;
  static const sInt Slot = sCBUFFER_VS|0;
#line 54 "adf_shader.hpp"
};

struct tADFShadowMatPSPara
{
public:
  sVector4 dnx;
  sVector4 dny;
  sVector4 px;
  sVector4 cp;
  sVector4 sp;
  sVector4 op;
  sVector4 mp;
  sVector4 id;
  sVector4 d;
  sVector4 pstep;
  sVector4 light;
  sVector4 phongpara;
  sVector4 speccolor;
  sVector4 diffusecolor;
  sVector4 ambientcolor;
  static const sInt RegStart = 0;
  static const sInt RegCount = 15;
  static const sInt Slot = sCBUFFER_PS|0;
#line 78 "adf_shader.hpp"
};


/****************************************************************************/

class tADFMat : public sMaterial
{
  static sShader *VS();
  static sShader *PS();
public:
  void SelectShaders(sVertexFormatHandle *);
};
class tADFShadowMat : public sMaterial
{
  static sShader *VS();
  static sShader *PS();
public:
  void SelectShaders(sVertexFormatHandle *);
};

/****************************************************************************/

#endif

