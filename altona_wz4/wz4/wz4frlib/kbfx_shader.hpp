/****************************************************************************/
/***                                                                      ***/
/***   header file generated by ASC 1.63 - altona shader compiler.        ***/
/***                                                                      ***/
/****************************************************************************/

#ifndef HEADER_WZ4FRLIB_KBFX_SHADER_ASC
#define HEADER_WZ4FRLIB_KBFX_SHADER_ASC

#include "base/graphics.hpp"

/****************************************************************************/


/****************************************************************************/

struct VideoDistortVSPara
{
public:
  sMatrix44 mvp;
  static const sInt RegStart = 0;
  static const sInt RegCount = 4;
  static const sInt Slot = sCBUFFER_VS|0;
#line 25 "kbfx_shader.hpp"
};

struct VideoDistortPSPara
{
public:
  sVector4 Color0;
  sVector4 Color1;
  sVector4 Color2;
  sVector4 Color3;
  static const sInt RegStart = 0;
  static const sInt RegCount = 4;
  static const sInt Slot = sCBUFFER_PS|0;
#line 38 "kbfx_shader.hpp"
};

struct BlockTransVSPara
{
public:
  sMatrix44 mvp;
  static const sInt RegStart = 0;
  static const sInt RegCount = 4;
  static const sInt Slot = sCBUFFER_VS|0;
#line 48 "kbfx_shader.hpp"
};

struct Glitch2DVSPara
{
public:
  sMatrix44 mvp;
  static const sInt RegStart = 0;
  static const sInt RegCount = 4;
  static const sInt Slot = sCBUFFER_VS|0;
#line 58 "kbfx_shader.hpp"
};


/****************************************************************************/

class VideoDistortMtrl : public sMaterial
{
  static sShader *VS();
  static sShader *PS();
public:
  void SelectShaders(sVertexFormatHandle *);
#line 40 "kbfx_shader.asc"

    sBool UseSMH;
    sBool UseGamma;
  
#line 75 "kbfx_shader.cpp"
};
class BlockTransMtrl : public sMaterial
{
  static sShader *VS();
  static sShader *PS();
public:
  void SelectShaders(sVertexFormatHandle *);
#line 119 "kbfx_shader.asc"
    
  
#line 86 "kbfx_shader.cpp"
};
class Glitch2DMtrl : public sMaterial
{
  static sShader *VS();
  static sShader *PS();
public:
  void SelectShaders(sVertexFormatHandle *);
#line 170 "kbfx_shader.asc"
    
  
#line 97 "kbfx_shader.cpp"
};

/****************************************************************************/

#endif

